from cryptography.fernet import Fernet

'''def write_key():
    key = Fernet.generate_key()
    with open('key.key', 'wb') as key_file:
        key_file.write(key)

write_key()'''

def load_key():
    file = open('key.key',  'rb')
    key = file.read()
    file.close()
    return key

key = load_key()
fer = Fernet(key)


def add():
    name = input('Enter the account name: ')
    passw = input('Enter the password: ')
    with open('passwords.txt', 'a') as f:
        f.write(name+' | '+fer.encrypt(passw.encode()).decode()+'\n')

def view():
    with open('passwords.txt', 'r') as f:
        for line in f.readlines():
            data = line.rstrip()
            # Ensure the line contains the expected '|' separator
            if '|' in data:
                user, psw = data.split('|')
                print('Account:', user.strip(), '| Password:', fer.decrypt(psw.encode()).decode())
            else:
                # Handle cases where the line doesn't match the expected format
                print(f"Skipping malformed line: {data}")


while True:

    mode = input('What do you want to do Add or View password(Add/View/q to quit: ').lower()

    if mode == 'q':
        print('You have exited successfully')
        break

    if mode == 'add':
        add()

    elif mode == 'view':
        view()

    else:
        print('Invalid option...')
        continue
